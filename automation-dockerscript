#!/bin/bash 

if [[ $# -eq 0 ]] ; then
    echo 'give a compose.yaml url'
    exit 0
fi

function sed_rt() {
  echo "$1" | sed -e 's/^ *//g' -e 's/ *$//g' | sed -n '1 p'
}

function to_base64() {
  echo "$1" | tr -d '\n' | base64 | tr -d '=' | tr -d '\n' | sed 's/\//%2F/g' | sed 's/\+/%2B/g'
}

function to_int() {
  echo ${1/\.*/}
}

function to_num() {
  case $1 in
  '' | *[!0-9\.]*) echo 0 ;;
  *) echo $1 ;;
  esac
}

#os info
if [ -z "$os_name" ]; then
  if [ -e /etc/redhat-release ]; then
    os_name=$(sed_rt "$(cat /etc/redhat-release)")
  elif [ -e /etc/debian_version ]; then
    os_name=$(sed_rt "Debian $(cat /etc/debian_version)")
  fi

  if [ -z "$os_name" ]; then
    os_name=$(sed_rt "$(uname -s)")
  fi
fi

if [ -z "$cpu_freq" ]; then
  cpu_freq=$(sed_rt $(to_num "$(lscpu | grep 'CPU MHz' | awk -F\: '{ print $2 }' | sed -e 's/^ *//g' -e 's/ *$//g')"))
fi


ram_free=$(sed_rt $(to_num "$(cat /proc/meminfo | grep ^MemFree: | awk '{ print $2 }')"))


#check if docker installed if not then install
if [ ! -n "$(command -v docker)" ]; then
        dnf -y update && sudo dnf install -y yum-utils && yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo && yum remove -y podman && yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin && sudo systemctl enable --now docker && usermod -aG docker $USER
        curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
fi

if [ ! -n "$(command -v curl)" ]; then
        yum install -y curl
fi

if [ ! -n "$(command -v wget)" ]; then
        yum install -y wget
fi

  if [ ! -n "$(command -v docker)" ]; then
    fail "|\n|   Error: Cannot install docker, please install the docker and run the script again\n|"
  fi


mkdir -p /home/mariadb_storage && chmod 777 /home/mariadb_storage

# installing agent for docker
curl $1 -o compose.yaml
mkdir -p /home/agent4docker && chmod 777 /home/agent4docker && wget https://raw.githubusercontent.com/hasan4temp/docker-auto/master/agent4docker.sh -O /home/agent4docker/agent4docker.sh
chmod +x /home/agent4docker/agent4docker.sh
echo "*/2 * * * * /bin/bash /home/agent4docker/agent4docker.sh" >> /etc/crontab

# installing log pusher for docker
mkdir -p /home/docker-logs
chmod 777 /home/docker-logs
wget https://raw.githubusercontent.com/hasan4temp/docker-auto/master/log-push.sh -O /home/dockerlogs/log-push.sh
chmod +x /home/dockerlogs/log-push.sh
echo "0 */6 * * * /bin/bash /home/dockerlogs/log-push.sh" >> /etc/crontab


echo -e "\n !!!!!!!!!!!!!!!!!!!!!Docker process listed below"

docker compose up -d
docker ps

echo -e "\n !!!!!!!!!!!!!!!!!!!!!!Docker installed images listed below" 

dockerfullid_mariadb=$(docker container ls --all --quiet --no-trunc --filter "name=mariadb")
dockercreated_mariadb=$(docker inspect $dockerfullid_mariadb | grep -i created | tr -d " \t\n\r")
dockerstatus_mariadb=$(docker ps --filter name=mariadb | awk '{print $7,$8,$9}' | tail -1)

echo -e "\n Docker stats for mariadb_____________________________________"
echo "mariadb docker full ID: "$dockerfullid_mariadb 
echo "mariadb docker created time: "$dockercreated_mariadb
echo "mariadb docker status: "$dockerstatus_mariadb

echo -e "\n"

echo -e "\n Linux stats_____________________________________"

publicIP=$(wget -qO - icanhazip.com)                                                                                                                 
uptime=$(uptime | tr -d " \t\n\r")
echo "PublicIP = $publicIP"
echo "os_name = $os_name"
echo "cpu_freq = $cpu_freq"
echo "ram_free = $ram_free"
echo "system uptime = $uptime"

#wget -q -o /dev/null -T 25 --post-data "$encoded" --no-check-certificate "https://agent.syagent.com/agent"